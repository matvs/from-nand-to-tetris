function Tetromino.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 1
push constant 10
pop this 0
push constant 0
pop this 2
push constant 0
pop this 3
push constant 0
pop this 4
push argument 1
pop this 5
push pointer 0
return
function Tetromino.draw 4
push argument 0
pop pointer 0
push this 2
push this 1
add
pop pointer 1
push that 0
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 1
push constant 4
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 2
push constant 4
lt
not
if-goto WHILE_END1
push pointer 0
push constant 2
push constant 15
push local 2
push local 1
push constant 4
call Math.multiply 2
add
sub
call Tetromino.pow 3
pop local 3
push local 0
push local 3
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 3
push this 0
call Math.multiply 2
push this 0
push local 2
call Math.multiply 2
add
push this 4
push this 0
call Math.multiply 2
push this 0
push local 1
call Math.multiply 2
add
push this 3
push this 0
call Math.multiply 2
push this 0
push local 2
call Math.multiply 2
add
push this 0
add
push this 4
push this 0
call Math.multiply 2
push this 0
push local 1
call Math.multiply 2
add
push this 0
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
push constant 0
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Tetromino.drop 7
push argument 0
pop pointer 0
push constant 0
pop local 6
push this 2
push this 1
add
pop pointer 1
push that 0
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
push this 4
push constant 1
add
pop this 4
label WHILE_EXP0
push local 1
push constant 4
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 2
push constant 4
lt
not
if-goto WHILE_END1
push pointer 0
push constant 2
push constant 15
push local 2
push local 1
push constant 4
call Math.multiply 2
add
sub
call Tetromino.pow 3
pop local 3
push local 0
push local 3
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 5
call Board.get 1
pop local 5
push this 4
push local 1
add
push constant 1
neg
gt
push this 4
push local 1
add
push constant 20
lt
and
push this 3
push local 2
add
push constant 1
neg
gt
and
push this 3
push local 2
add
push constant 10
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 4
push local 1
add
push local 5
add
pop pointer 1
push that 0
pop local 4
push this 3
push local 2
add
push local 4
add
pop pointer 1
push that 0
push constant 0
not
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop local 6
push constant 4
pop local 2
push constant 4
pop local 1
label IF_FALSE2
label IF_FALSE1
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
push constant 0
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 1
push constant 0
pop local 2
push this 4
push constant 17
eq
push local 6
or
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 4
push constant 1
sub
pop this 4
label WHILE_EXP2
push local 1
push constant 4
lt
not
if-goto WHILE_END2
label WHILE_EXP3
push local 2
push constant 4
lt
not
if-goto WHILE_END3
push pointer 0
push constant 2
push constant 15
push local 2
push local 1
push constant 4
call Math.multiply 2
add
sub
call Tetromino.pow 3
pop local 3
push local 0
push local 3
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 5
push this 4
push local 1
add
push this 3
push local 2
add
push constant 0
not
call Board.set 4
pop temp 0
label IF_FALSE4
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP3
label WHILE_END3
push local 1
push constant 1
add
pop local 1
push constant 0
pop local 2
goto WHILE_EXP2
label WHILE_END2
push constant 0
not
return
label IF_FALSE3
push constant 0
return
function Tetromino.rotate 0
push argument 0
pop pointer 0
push this 2
push argument 1
add
pop this 2
push this 2
push constant 1
neg
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 3
pop this 2
label IF_FALSE0
push this 2
push constant 4
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 2
label IF_FALSE1
push constant 0
return
function Tetromino.move 6
push argument 0
pop pointer 0
push this 3
push argument 1
add
pop this 3
push this 2
push this 1
add
pop pointer 1
push that 0
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 1
push constant 4
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 2
push constant 4
lt
not
if-goto WHILE_END1
push pointer 0
push constant 2
push constant 15
push local 2
push local 1
push constant 4
call Math.multiply 2
add
sub
call Tetromino.pow 3
pop local 3
push local 0
push local 3
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push local 2
add
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
push constant 1
add
pop this 3
push constant 0
return
label IF_FALSE1
push this 3
push local 2
add
push constant 9
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 3
push constant 1
sub
pop this 3
push constant 0
return
label IF_FALSE2
push this 5
call Board.get 1
pop local 4
push this 4
push local 1
add
push local 4
add
pop pointer 1
push that 0
pop local 5
push this 3
push local 2
add
push local 5
add
pop pointer 1
push that 0
push constant 0
not
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 3
push argument 1
sub
pop this 3
push constant 0
return
label IF_FALSE3
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
push constant 0
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Tetromino.pow 2
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 1
pop local 0
push argument 2
push constant 14
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
label WHILE_EXP0
push local 1
push argument 2
lt
not
if-goto WHILE_END0
push local 0
push argument 1
call Math.multiply 2
pop local 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
